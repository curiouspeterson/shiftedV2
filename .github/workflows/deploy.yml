name: Deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Testing deployment workflow with Supabase migrations - testing with SUPABASE_ACCESS_TOKEN
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Debug Environment
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Checking for required secrets..."
          if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ]; then echo "Missing NEXT_PUBLIC_SUPABASE_URL"; fi
          if [ -z "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ]; then echo "Missing NEXT_PUBLIC_SUPABASE_ANON_KEY"; fi
          if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then echo "Missing SUPABASE_SERVICE_ROLE_KEY"; fi
          if [ -z "$JWT_SECRET" ]; then echo "Missing JWT_SECRET"; fi
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then echo "Missing SUPABASE_ACCESS_TOKEN"; fi

      - name: Install Dependencies
        run: |
          npm ci
          npm list --depth=0

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Pull Required Docker Images
        run: |
          docker pull supabase/postgres:14.1.0.71
          docker pull supabase/storage-api:v0.20.1
          docker pull supabase/postgres-meta:v0.45.0
          docker pull supabase/gotrue:v2.15.3
          docker pull supabase/studio:v0.1.0
          docker pull supabase/pgadmin-schema-diff:cli-0.0.5
          docker pull kong:2.8.1
          docker pull inbucket/inbucket:3.0.3
          docker pull postgrest/postgrest:v9.0.1.20220717
          docker pull supabase/realtime:v0.22.7

      - name: Run Migrations
        run: |
          echo "Linking Supabase project..."
          supabase link --project-ref wgpehvclyqlyhseqdmqj --access-token ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          echo "Pushing database changes..."
          supabase db push
        env:
          SUPABASE_INTERNAL_IMAGE_REGISTRY: docker.io

      - name: Build
        run: |
          echo "Starting build process..."
          npm run build
        env:
          CI: true

      # Vercel deployment will be handled by the Vercel GitHub integration 